
<!-- Copyright Adele Team LIG Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->

<ipojo xmlns:cilia="fr.liglab.adele.cilia">


	<component classname="fr.liglab.adele.cilia.admin.impl.CiliaContextImpl"
		name="CiliaContext"  immediate="true">
		<provides>
			<property name="cilia.context.type" type="string" value="ipojo" />
		</provides>
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</component>
	
	<!-- Declare the handlers -->
	<handler
		classname="fr.liglab.adele.cilia.internals.factories.MediatorDummyHandler"
		name="processor-tracker" namespace="fr.liglab.adele.cilia">
	</handler>

	<handler
		classname="fr.liglab.adele.cilia.internals.factories.MediatorDummyHandler"
		name="scheduler-tracker" namespace="fr.liglab.adele.cilia">
	</handler>

	<handler
		classname="fr.liglab.adele.cilia.internals.factories.MediatorDummyHandler"
		name="dispatcher-tracker" namespace="fr.liglab.adele.cilia">
	</handler>

	<handler classname="fr.liglab.adele.cilia.runtime.impl.DispatcherHandler"
		name="dispatcher" namespace="fr.liglab.adele.cilia" >
		<requires field="m_applicationQueue" specification="fr.liglab.adele.cilia.runtime.WorkQueue"
			filter="(cilia.pool.scope=application)" />
		<callback transition="validate" method="validate" />
		<callback transition="invalidate" method="unvalidate" />
	</handler>

	<handler classname="fr.liglab.adele.cilia.runtime.impl.MonitorHandler"
		name="monitor-handler" level="2" namespace="fr.liglab.adele.cilia"
		>
	</handler>

	<handler
		classname="fr.liglab.adele.cilia.framework.monitor.AuditHandler"
		name="audit" namespace="fr.liglab.adele.cilia" >
	</handler>

	<handler
		classname="fr.liglab.adele.cilia.framework.monitor.statevariable.MonitorHandlerStateVar"
		name="monitor-statevar-handler" namespace="fr.liglab.adele.cilia"
		>
		<requires field="m_systemQueue" specification="fr.liglab.adele.cilia.runtime.WorkQueue"
			filter="(cilia.pool.scope=system)" />	
		<callback transition="validate" method="validate" />
		<callback transition="invalidate" method="unvalidate" />

	</handler>

	<handler classname="fr.liglab.adele.cilia.runtime.impl.SchedulerHandler"
		name="scheduler" namespace="fr.liglab.adele.cilia">
		<requires field="m_systemQueue" specification="fr.liglab.adele.cilia.runtime.WorkQueue"
			filter="(cilia.pool.scope=system)" />
		<callback transition="validate" method="validate" />
		<callback transition="invalidate" method="unvalidate" />
	</handler>


	<!-- Declaring Immediate Scheduler -->
	<scheduler
		classname="fr.liglab.adele.cilia.framework.components.ImmediateScheduler"
		name="immediate-scheduler" namespace="fr.liglab.adele.cilia"
		>
<!--  
		<cilia:audit field="testAudit" namespace ="scheduler" access="rw" />
		
		<requires field="wq" specification="fr.liglab.adele.cilia.runtime.WorkQueue"
			filter="(cilia.pool.scope=error)" />
-->

	</scheduler>
	<!-- Declaring Multicast Dispatcher -->
	<dispatcher
		classname="fr.liglab.adele.cilia.framework.components.MulticastDispatcher"
		name="multicast-dispatcher" namespace="fr.liglab.adele.cilia"
		>
	</dispatcher>

	<!-- Processors -->
	<processor name="XsltTransformerProcessor" namespace="fr.liglab.adele.cilia"
		category="Transformer"
		classname="fr.liglab.adele.cilia.framework.components.XsltTransformerProcessor"
		>
		<properties>
			<property name="xslt-file" field="filepath" />
		</properties>
		<cilia:method data.type="fr.liglab.adele.cilia.Data" />
	</processor>

	<processor name="XmlSplitterProcessor" namespace="fr.liglab.adele.cilia"
		category="Splitter"
		classname="fr.liglab.adele.cilia.framework.components.XpathSplitter"
		>
		<properties>
			<property name="separator" field="expression" />
		</properties>
	</processor>

	<processor name="StringSplitterProcessor" namespace="fr.liglab.adele.cilia"
		category="Splitter"
		classname="fr.liglab.adele.cilia.framework.components.SplitterProcessor"
		>
		<properties>
			<property name="separator" field="expression" />
		</properties>
	</processor>

	<processor name="AggregatorProcessor" namespace="fr.liglab.adele.cilia"
		category="Aggregator"
		classname="fr.liglab.adele.cilia.framework.components.AggregatorProcessor"
		>
	</processor>

	<processor name="SemanticTranslatorProcessor" namespace="fr.liglab.adele.cilia"
		category="Translator"
		classname="fr.liglab.adele.cilia.framework.components.LocalSemanticTranslatorProcessor"
		>
		<properties>
			<property name="dictionary" field="dictionary" />
		</properties>
		<cilia:method data.type="fr.liglab.adele.cilia.Data" />
		
	</processor>

	<processor name="SimpleEnricherProcessor" namespace="fr.liglab.adele.cilia"
		category="Enricher"
		classname="fr.liglab.adele.cilia.framework.components.SimpleEnricherProcessor"
		>
		<properties>
			<property name="enricher.content" field="content" />
		</properties>
		<cilia:method data.type="fr.liglab.adele.cilia.Data" />
	</processor>

	<processor name="PrefixEnricherProcessor" namespace="fr.liglab.adele.cilia"
		category="Enricher"
		classname="fr.liglab.adele.cilia.framework.components.PrefixEnricherProcessor"
		>
		<properties>
			<property name="enricher.prefix" field="prefix" value="Hello world " />
		</properties>
		<cilia:method data.type="fr.liglab.adele.cilia.Data" />
	</processor>

	<processor name="SufixEnricherProcessor" namespace="fr.liglab.adele.cilia"
		category="Enricher"
		classname="fr.liglab.adele.cilia.framework.components.SufixEnricherProcessor"
		>
		<properties>
			<property name="enricher.sufix" field="sufix" value=" Hello world" />
		</properties>
		<cilia:method data.type="fr.liglab.adele.cilia.Data" />
	</processor>


	<processor name="simple-processor" namespace="fr.liglab.adele.cilia"
		classname="fr.liglab.adele.cilia.framework.components.SimpleProcessor" />

	<!-- INSTANCES -->
	
	<instance component="CiliaContext" name="Cilia Context" />


	<!-- Composant System Thread Pool -->
	<component classname="fr.liglab.adele.cilia.runtime.impl.WorkQueueImpl"
		name="WorkQueue" immediate="true">
		<properties>
			<property name="system.thread.pool.size" field="m_size" />
			<property name="thread.pool.name" field="m_name" />
			<property name="thread.pool.priority" field="m_priority" />
		</properties>
		<provides specification="fr.liglab.adele.cilia.runtime.WorkQueue">
			<property name="cilia.pool.scope" type="String" />
		</provides>
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</component>

	<instance component="WorkQueue" name="workqueue-system">
		<property name="cilia.pool.scope" value="system" />
		<property name="system.thread.pool.size" value="4" />
		<property name="thread.pool.priority" value="5" />
		<property name="thread.pool.name" value="system.threadPool" />
	</instance>

	<instance component="WorkQueue" name="workqueue-application">
		<property name="cilia.pool.scope" value="application" />
		<property name="system.thread.pool.size" value="4" />
		<property name="thread.pool.priority" value="2" />
		<property name="thread.pool.name" value="application.threadPool" />
	</instance>

	<!-- Component Admin Data 'Global data storage per chain -->
	<component classname="fr.liglab.adele.cilia.runtime.impl.AdminDataImpl"
		name="AdminData" immediate="true">
		<provides specification="fr.liglab.adele.cilia.runtime.AdminData">
			<property name="chain.name" type="String" />
		</provides>
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</component>


	<!-- PARSERS -->
	<component classname="fr.liglab.adele.cilia.admin.impl.CiliaChainInstanceParser"
		name="Cilia-Chain-Parser" >
		<provides />
		<requires field="ccontext"/>
		<requires aggregate="true" optional="true">
			<callback type="bind" method="bindExtenderParsers" />
			<callback type="unbind" method="unbindExtenderParser" />
		</requires>
	</component>

	<component classname="fr.liglab.adele.cilia.admin.impl.CiliaFileManagerImpl"
		name="Cilia-File-Manager" >
		<provides />
		<requires field="parser" />
		<requires field="ccontext" />
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</component>

	<!-- INSTANCES -->

	<instance component="Cilia-Chain-Parser" name="Cilia-Chain-Parser" />
	<instance component="Cilia-File-Manager" name="Cilia-File-Manager" />

	<handler classname="fr.liglab.adele.cilia.dependency.DependencyHandler"
		namespace="fr.liglab.adele.cilia" name="dependency" level="0"
		>
	</handler>

	<!-- SCHEDULERS DEFINITIONS WITH CILIA DEFINITION LANGUAGE -->
	<scheduler name="periodic-scheduler"
		classname="fr.liglab.adele.cilia.framework.components.PeriodicScheduler"
		namespace="fr.liglab.adele.cilia">
		<properties>
			<property name="delay" field="delay" value="3000" />
			<property name="period" field="period" value="3000" />
		</properties>
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</scheduler>

	<scheduler name="correlation-scheduler"
		classname="fr.liglab.adele.cilia.framework.components.CorrelationScheduler"
		namespace="fr.liglab.adele.cilia">
		<properties>
			<property name="correlation" method="setCorrelation" type="String"
				value="($CORRELATION.ID)" />
		</properties>
	</scheduler>

	<scheduler name="counter-scheduler"
		classname="fr.liglab.adele.cilia.framework.components.CounterScheduler"
		namespace="fr.liglab.adele.cilia">
		<properties>
			<property name="correlation" method="setCorrelation" type="String"
				value="(*)" />
			<property name="count" field="m_counter" />
			<property name="condition" field="m_condition" />
		</properties>
	</scheduler>

	<!-- DISPATCHER DEFINITIONS WITH CILIA DEFINITION LANGUAGE -->
	<dispatcher name="content-based-dispatcher"
		classname="fr.liglab.adele.cilia.framework.components.ContentBasedDispatcher"
		namespace="fr.liglab.adele.cilia">
		<properties>
			<property name="conditions" method="setRouteConditions"
				type="java.util.Map" />
			<property name="language" method="setLanguage" value="ldap"
				type="String" />
		</properties>
	</dispatcher>

	<dispatcher name="descriptor-based-dispatcher"
		classname="fr.liglab.adele.cilia.framework.components.DescriptorBasedDispatcher"
		namespace="fr.liglab.adele.cilia">
		<properties>
			<property name="conditions" method="setRouteConditions"
				type="java.util.Map" />
			<property name="property" method="setProperty" type="java.lang.String" />
		</properties>
	</dispatcher>

	<!--BINDING SERVICES -->
	<!-- *********************************************************************************** -->

	<!-- *********************************************************************************** -->
	<collector classname="fr.liglab.adele.cilia.framework.components.DirectCollector"
		name="direct-collector" namespace="fr.liglab.adele.cilia"
		 immediate="true">
		<provides>
			<property field="asociatedMediator" name="mediator.address"
				type="String" />
		</provides>
		<properties>
			<property name="collector.sourceName" method="setSourceName"
				type="String" />
		</properties>
	</collector>
	<sender classname="fr.liglab.adele.cilia.framework.components.DirectSender"
		name="direct-sender" namespace="fr.liglab.adele.cilia" 
		immediate="true">
		<requires field="collector" id="mediator.address" filter="(mediator.address=...)" />
	</sender>

	<linker name="direct"
		classname="fr.liglab.adele.cilia.framework.components.DirectBindingService">
		<collector type="direct-collector" namespace="fr.liglab.adele.cilia" />
		<sender type="direct-sender" namespace="fr.liglab.adele.cilia" />
	</linker>
	<!-- *********************************************************************************** -->
	<sender classname="fr.liglab.adele.cilia.framework.components.ConsoleSender"
		name="console-sender" >
		<properties>
			<property name="console.detail" field="detail" value="false" />
			<property name="console.header" field="header" value="" />
		</properties>
	</sender>

	<adapter name="console-adapter" pattern="out-only">
		<sender type="console-sender" />
		<ports>
			<in-port name="unique" type="*" />
		</ports>
	</adapter>


	<!-- *********************************************************************************** -->
	<collector
		classname="fr.liglab.adele.cilia.framework.components.RandomNumberCollector"
		name="random-number-collector" >
		<properties>
			<property name="delay" method="delay" value="5000"/>
			<property name="period" method="period" value="5000"/>
		</properties>
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</collector>

	<adapter name="number-generator-adapter" pattern="in-only">
		<collector type="random-number-collector" />
		<ports>
			<out-port name="unique" type="*" />
		</ports>
	</adapter>

	<!-- Monitors -->
	<monitor name="error-handler"
		classname="fr.liglab.adele.cilia.framework.monitor.ProcessingErrorHandler"
		namespace="fr.liglab.adele.cilia">
		<properties>
			<property name="rules" field="rules" />
		</properties>
	</monitor>

	<!-- PARSERS -->
	<component classname="fr.liglab.adele.cilia.internals.PeriodicParser"
		immediate="true">
		<provides />
	</component>
	<instance component="fr.liglab.adele.cilia.internals.PeriodicParser" />

	<component classname="fr.liglab.adele.cilia.internals.ContentBasedParser"
		immediate="true">
		<provides />
	</component>
	<instance component="fr.liglab.adele.cilia.internals.ContentBasedParser" />

	<component classname="fr.liglab.adele.cilia.internals.MonitoringParser"
		immediate="true">
		<provides />
	</component>
	<instance component="fr.liglab.adele.cilia.internals.MonitoringParser" />

	<component classname="fr.liglab.adele.cilia.internals.DependencyParser"
		immediate="true">
		<provides />
	</component>
	<instance component="fr.liglab.adele.cilia.internals.DependencyParser" />
	
	<component
		classname="fr.liglab.adele.cilia.internals.EnricherParser">
		<provides />
	</component>
	<instance
		component="fr.liglab.adele.cilia.internals.EnricherParser" />
		
	<component classname="fr.liglab.adele.cilia.internals.MonitorErrorHandlerParser"
		immediate="true">
		<provides />
	</component>
	
	
	<!-- A D M I N I S T R A T I O N -->
		<component
		classname="fr.liglab.adele.cilia.admin.impl.CiliaAdminServiceImpl"
		name="Cilia-Admin-Service" immediate="true" >
		<provides/>
		<requires field="ccontext" />
		<requires field="parser" />
	</component>

	<component
		classname="fr.liglab.adele.cilia.admin.impl.CiliaAdminServiceGogo"
		name="Cilia-Admin-Gogo" immediate="true" >
		<provides>
			<property name="osgi.command.scope" type="String"
				value="cilia" />
			<property name="osgi.command.function" type="String[]"
				value="{startChain,stopChain,copyComponent,createChain,emptyChain,createEmptyChain,deleteChain,chain,chains,loadChain,replaceComponent,updateChain,createAdapter,createMediator,deleteAdapter,deleteMediator,adapter,mediator,updateAdapter,updateMediator,createBinding,deleteBinding}" />
		</provides>
		<requires field="ccontext" />
		<requires field="admin" />
	</component>

	<component
		classname="fr.liglab.adele.cilia.admin.impl.CiliaFileInstall"
		name="Cilia-Deployer" >
		<provides />
		<requires field="manager" />
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</component>

	<!-- Gogo commands : monitoring specification and runtime -->
	<component
		classname="fr.liglab.adele.cilia.admin.impl.GogoMonitoringCommands"
		name="Monitoring_Commands.gogo">
		<provides
			specifications="fr.liglab.adele.cilia.admin.impl.GogoMonitoringCommands">
			<property name="osgi.command.scope" type="String"
				value="cilia" />
			<property name="osgi.command.function" type="String[]"
				value="{
				        node_setup,node_rawdata,node_monitoring,
				        app_chains,app_chain_state,app_endpoints_in,app_endpoints_out,app_connected_to,
				        app_find_node,
				        app_callback_chain,app_callback_node,app_callback_measure,
				        my_entry
				        }" />

		</provides>
		<requires field="ciliaContext" />
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
		<!-- <requires field="adminService" optional="true" /> -->
	</component>


	<!-- INSTANCES -->

	<instance component="Cilia-Admin-Service" name="Cilia-Admin-Service" />

	<instance component="Cilia-Admin-Gogo" name="Cilia-Admin-Gogo" />

	<instance component="Cilia-Deployer" name="Cilia-Deployer" />
	<!--  
 	<instance component="Monitoring_Commands.gogo"
		name="Monitoring_Commands.gogo" />
	-->

</ipojo>
