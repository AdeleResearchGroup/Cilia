
<!-- Copyright Adele Team LIG Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->


<cilia xmlns:cilia="fr.liglab.adele.cilia" xmlns:jmx="org.apache.felix.ipojo.handlers.jmx">
	<!-- Processors to add cilia elements -->
	<processor name="ciliaCreatorProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaCreatorProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="create" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="ccontext" />
	</processor>


	<!-- Processors to remove cilia elements -->
	<processor name="ciliaRemoverProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaRemoverProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="remove" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="ccontext" />
	</processor>


	<processor name="ciliaStarterProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaStarterProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="start" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="ccontext" />
	</processor>

	<processor name="ciliaStopProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaStopProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="stop" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="ccontext" />
	</processor>

	<processor name="ciliaModifierProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaModifierProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="modify" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="ccontext" />
	</processor>

	<processor name="ciliaShowProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaShowProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="show" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="ccontext" />
	</processor>

	<processor name="ciliaLoaderProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaLoadChainProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="load" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="manager" />
	</processor>

	<processor name="ciliaReplacerProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaReplacerProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="replace" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="ccontext" />
	</processor>

	<processor name="ciliaCopierProcessor"
		classname="fr.liglab.adele.cilia.administration.processors.CiliaCopierProcessor"
		namespace="fr.liglab.adele.cilia.admin">
		<cilia:method name="copy" data.type="fr.liglab.adele.cilia.Data" />
		<requires field="ccontext" />
	</processor>

	<mediator-component name="CiliaAdminCBMediator"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="simple-processor" namespace="fr.liglab.adele.cilia" />
		<dispatcher name="content-based-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminCreator"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaCreatorProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminRemover"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaRemoverProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminStarter"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaStarterProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminStop"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaStopProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminShow"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaShowProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminModifier"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaModifierProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminLoader"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaLoaderProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminReplacer"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaReplacerProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<mediator-component name="CiliaAdminCopier"
		namespace="fr.liglab.adele.cilia.admin">
		<scheduler name="immediate-scheduler" namespace="fr.liglab.adele.cilia" />
		<processor name="ciliaCopierProcessor" namespace="fr.liglab.adele.cilia.admin" />
		<dispatcher name="multicast-dispatcher" namespace="fr.liglab.adele.cilia" />
	</mediator-component>

	<collector
		classname="fr.liglab.adele.cilia.administration.adapter.CiliaAdminServiceImpl"
		namespace="fr.liglab.adele.cilia" name="cilia-admin-service"
		immediate="true" architecture="true">
		<provides />
		<requires field="ccontext" />
	</collector>

	<adapter name="cilia-admin-service-adapter" namespace="fr.liglab.adele.cilia.admin"
		pattern="in-only">
		<collector type="cilia-admin-service" />
	</adapter>


	<collector
		classname="fr.liglab.adele.cilia.administration.command.CiliaAdminGogoCommandAdapter"
		namespace="fr.liglab.adele.cilia" name="felix-admin-gogo-shell-collector"
		immediate="true" architecture="true">
		<provides
			specifications="{fr.liglab.adele.cilia.administration.command.CiliaAdminGogoCommandAdapter}">
			<property name="osgi.command.scope" type="String" value="cilia" />
			<property name="osgi.command.function" type="String[]"
				value="{create,modify,remove,start,stop,show,load,help}" />
		</provides>
	</collector>

	<adapter name="felix-admin-gogo-shell" namespace="fr.liglab.adele.cilia.admin"
		pattern="in-only">
		<collector type="felix-admin-gogo-shell-collector" />
	</adapter>

	<component name="ChainActivator"
		classname="fr.liglab.adele.cilia.administration.activator.AdminChainActivator"
		architecture="true">
		<requires field="ccontext" />
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</component>

	<component
		classname="fr.liglab.adele.cilia.administration.fileinstall.CiliaFileInstall"
		name="Cilia-Deployer" architecture="true">
		<provides />
		<requires field="manager" />
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />

	</component>
	
	<!--  Gogo commands : monitoring specification and runtime  -->
	<component classname="fr.liglab.adele.cilia.administration.command.GogoMonitoringCommands"
		name="Monitoring_Commands.gogo">
		<provides specifications="fr.liglab.adele.cilia.administration.command.GogoMonitoringCommands">
			<property name="osgi.command.scope" type="String" value="cilia" />
			<property name="osgi.command.function" type="String[]"
				value="{
				        runtime_endpoints_in,runtime_endpoints_out,runtime_connected_to,
				        runtime_find_node,
				        runtime_chain_state,runtime_chains,
				        node_setup,node_rawdata,node_monitoring,node_dump,
				        app_chains,app_endpoints_in,app_endpoints_out,app_connected_to,
				        app_find_node,
				        app_callback_chain,app_callback_node,
				        my_entry
				        }" />
		</provides>
		<requires field="ciliaContext" />
		<callback transition="validate" method="start" />
		<callback transition="invalidate" method="stop" />
	</component>

	<!--  JMX interface : ApplicatioRuntime  -->
	<component classname="fr.liglab.adele.cilia.administration.jmx.ApplRuntime"
	  name ="ApplicationRuntime.jmx">
	  	<provides specifications="fr.liglab.adele.cilia.MeasureCallback" />
	  	<provides specifications="fr.liglab.adele.cilia.ThresholdsCallback" />
	  	<provides specifications="fr.liglab.adele.cilia.NodeCallback" />
		<provides>
			<property name="cilia.runtime.node.data" type="java.lang.String" value="(node=*)" />
			<property name="cilia.runtime.node.threshold" type="java.lang.String" value="(node=*)" />
			<property name="cilia.runtime.node" type="java.lang.String" value="(node=*)" />		
		</provides>
		<requires field="ciliaContext" />
		<jmx:config domain="cilia.application" name="runtime" >
		  	<jmx:method name="getChainIDs" description="Get chains ID"/>
		  	<jmx:method name="getEndpointsIn" description="Get all endpoints matching the ldap filter"/>
		  	<jmx:method name="getEndpointsOut" description="Get all endpoints out matching the ldap filter"/>
		  	<jmx:method name="getConnectedTo" description="Get all nodes connected to the matching the ldap filter"/>	
		  	<jmx:method name="getNodeByFilter" description="Get all nodes the matching the ldap filter"/>	
		  	<jmx:method name="nodeSetUp" description="Configure the monitoring level node"/>	
		  	<jmx:method name="nodeRawData" description="Get Data received by the node"/>	
		  	<jmx:method name="getQueueSize" description="Get queue size (#data stored)"/>	
		  	<jmx:method name="getFlowControl" description="Get the ldap data flow control"/>	
		  	
		  	<jmx:property field ="nodes_arrival" name="Node arrival" notification="true" rights="r"/>
		  	<jmx:property field ="nodes_departure" name="Node departure" notification="true" rights="r"/>
		  	<jmx:property field ="nodes_modified" name="Node modified" notification="true" rights="r"/>	  
		  	<jmx:property field ="variable_updated" name="Variable" notification="true" rights="r" />	
		  	<jmx:property field ="variable_outOfBounds" name="Variable out of viability area" notification="true" rights="r" />	   
		</jmx:config>
	</component>
	<instance component="Runtime.listeners" name="Runtime.listeners"/> 
	
	<!--  JMX interface : ApplicatioSpecification  -->
	<component classname="fr.liglab.adele.cilia.administration.jmx.ApplSpecification"
	  name ="ApplicationSpecification.jmx">
	  	<provides specifications="fr.liglab.adele.cilia.NodeCallback" />
	  	<provides specifications="fr.liglab.adele.cilia.ChainCallback" />
		<provides>
			<property name="cilia.application.node" type="java.lang.String" value="(node=*)" />
			<property name="cilia.application.chain" type="java.lang.String" value="(chain=*)" />
		</provides>
		<requires field="ciliaContext" />
		<jmx:config domain="cilia.application" name="specification">
		  <jmx:method name="getChainIDs" description="Get chains ID"/>
		  <jmx:method name="getEndpointsIn" description="Get all endpoints matching the ldap filter"/>
		  <jmx:method name="getEndpointsOut" description="Get all endpoints out matching the ldap filter"/>
		  <jmx:method name="getConnectedTo" description="Get all nodes connected to the matching the ldap filter"/>	
		  <jmx:method name="getNodeByFilter" description="Get all nodes the matching the ldap filter"/>	
		  	
		  <jmx:property field ="nodes_arrival" name="Node arrival" notification="true" rights="r"/>
		  <jmx:property field ="nodes_departure" name="Node departure" notification="true" rights="r"/>
		  <jmx:property field ="nodes_modified" name="Node modified" notification="true" rights="r"/>	  
		  <jmx:property field ="chain_arrival" name="Chain arrival" notification="true" rights="r" />	
		  <jmx:property field ="chain_departure" name="Chain departure" notification="true" rights="r" />	   
		  <jmx:property field ="chain_started" name="Chain Started" notification="true" rights="r" />
		  <jmx:property field ="chain_stopped" name="Chain Stopped" notification="true" rights="r" />
		</jmx:config>
	</component>
	
	<!-- INSTANCES -->

	<instance component="ChainActivator" name="chain-activator" />
	<instance component="Cilia-Deployer" name="Cilia-Deployer" />

	<instance component="Monitoring_Commands.gogo" name="Monitoring_Commands.gogo"/>
	<instance component="ApplicationSpecification.jmx" name="ApplicationSpecification.jmx" />
	<instance component="ApplicationRuntime.jmx" name="ApplicationRuntime.jmx" />


</cilia>
